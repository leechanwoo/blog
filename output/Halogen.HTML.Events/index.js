// Generated by purs version 0.13.6
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Index = require("../Foreign.Index/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Clipboard_ClipboardEvent_EventTypes = require("../Web.Clipboard.ClipboardEvent.EventTypes/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_File_FileList = require("../Web.File.FileList/index.js");
var Web_HTML_Event_DragEvent_EventTypes = require("../Web.HTML.Event.DragEvent.EventTypes/index.js");
var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");
var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");
var Web_UIEvent_FocusEvent_EventTypes = require("../Web.UIEvent.FocusEvent.EventTypes/index.js");
var Web_UIEvent_KeyboardEvent_EventTypes = require("../Web.UIEvent.KeyboardEvent.EventTypes/index.js");
var Web_UIEvent_MouseEvent_EventTypes = require("../Web.UIEvent.MouseEvent.EventTypes/index.js");
var Web_UIEvent_WheelEvent_EventTypes = require("../Web.UIEvent.WheelEvent.EventTypes/index.js");
var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;
var handler = function (et) {
    var $1 = Halogen_HTML_Core.handler(et);
    var $2 = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create));
    return function ($3) {
        return $1($2($3));
    };
};
var onAbort = handler("abort");
var onChange = handler(Web_HTML_Event_EventTypes.change);
var onClick = (function () {
    var $4 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
    return function ($5) {
        return $4(mouseHandler($5));
    };
})();
var onDoubleClick = (function () {
    var $6 = handler(Web_UIEvent_MouseEvent_EventTypes.dblclick);
    return function ($7) {
        return $6(mouseHandler($7));
    };
})();
var onError = handler(Web_HTML_Event_EventTypes.error);
var onFileUpload = function (dictUnfoldable) {
    return function (f) {
        return handler(Web_HTML_Event_EventTypes.change)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.target)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_HTML_HTMLInputElement.fromEventTarget)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(function ($8) {
            return Effect_Unsafe.unsafePerformEffect(Web_HTML_HTMLInputElement.files($8));
        })(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)((function () {
            var $9 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
            var $10 = Web_File_FileList.items(dictUnfoldable);
            return function ($11) {
                return $9($10($11));
            };
        })())(f)))));
    };
};
var onInput = handler(Web_HTML_Event_EventTypes.input);
var onInvalid = handler(Web_HTML_Event_EventTypes.invalid);
var onKeyDown = (function () {
    var $12 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);
    return function ($13) {
        return $12(keyHandler($13));
    };
})();
var onKeyUp = (function () {
    var $14 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);
    return function ($15) {
        return $14(keyHandler($15));
    };
})();
var onLoad = handler(Web_HTML_Event_EventTypes.load);
var onMouseDown = (function () {
    var $16 = handler(Web_UIEvent_MouseEvent_EventTypes.mousedown);
    return function ($17) {
        return $16(mouseHandler($17));
    };
})();
var onMouseEnter = (function () {
    var $18 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter);
    return function ($19) {
        return $18(mouseHandler($19));
    };
})();
var onMouseLeave = (function () {
    var $20 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave);
    return function ($21) {
        return $20(mouseHandler($21));
    };
})();
var onMouseMove = (function () {
    var $22 = handler(Web_UIEvent_MouseEvent_EventTypes.mousemove);
    return function ($23) {
        return $22(mouseHandler($23));
    };
})();
var onMouseOut = (function () {
    var $24 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseout);
    return function ($25) {
        return $24(mouseHandler($25));
    };
})();
var onMouseOver = (function () {
    var $26 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseover);
    return function ($27) {
        return $26(mouseHandler($27));
    };
})();
var onMouseUp = (function () {
    var $28 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseup);
    return function ($29) {
        return $28(mouseHandler($29));
    };
})();
var onReset = handler("reset");
var onResize = handler("resize");
var onScroll = handler("scroll");
var onSelect = handler(Web_HTML_Event_EventTypes.select);
var onSubmit = handler("submit");
var onTouchCancel = (function () {
    var $30 = handler("touchcancel");
    return function ($31) {
        return $30(touchHandler($31));
    };
})();
var onTouchEnd = (function () {
    var $32 = handler("touchend");
    return function ($33) {
        return $32(touchHandler($33));
    };
})();
var onTouchEnter = (function () {
    var $34 = handler("touchenter");
    return function ($35) {
        return $34(touchHandler($35));
    };
})();
var onTouchLeave = (function () {
    var $36 = handler("touchleave");
    return function ($37) {
        return $36(touchHandler($37));
    };
})();
var onTouchMove = (function () {
    var $38 = handler("touchmove");
    return function ($39) {
        return $38(touchHandler($39));
    };
})();
var onTouchStart = (function () {
    var $40 = handler("touchstart");
    return function ($41) {
        return $40(touchHandler($41));
    };
})();
var onTransitionEnd = handler("transitionend");
var onWheel = (function () {
    var $42 = handler(Web_UIEvent_WheelEvent_EventTypes.wheel);
    return function ($43) {
        return $42(wheelHandler($43));
    };
})();
var focusHandler = Unsafe_Coerce.unsafeCoerce;
var onBlur = (function () {
    var $44 = handler(Web_HTML_Event_EventTypes.blur);
    return function ($45) {
        return $44(focusHandler($45));
    };
})();
var onFocus = (function () {
    var $46 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);
    return function ($47) {
        return $46(focusHandler($47));
    };
})();
var onFocusIn = (function () {
    var $48 = handler(Web_UIEvent_FocusEvent_EventTypes.focusin);
    return function ($49) {
        return $48(focusHandler($49));
    };
})();
var onFocusOut = (function () {
    var $50 = handler(Web_UIEvent_FocusEvent_EventTypes.focusout);
    return function ($51) {
        return $50(focusHandler($51));
    };
})();
var dragHandler = Unsafe_Coerce.unsafeCoerce;
var onDrag = (function () {
    var $52 = handler(Web_HTML_Event_DragEvent_EventTypes.drag);
    return function ($53) {
        return $52(dragHandler($53));
    };
})();
var onDragEnd = (function () {
    var $54 = handler(Web_HTML_Event_DragEvent_EventTypes.dragend);
    return function ($55) {
        return $54(dragHandler($55));
    };
})();
var onDragEnter = (function () {
    var $56 = handler(Web_HTML_Event_DragEvent_EventTypes.dragenter);
    return function ($57) {
        return $56(dragHandler($57));
    };
})();
var onDragExit = (function () {
    var $58 = handler(Web_HTML_Event_DragEvent_EventTypes.dragexit);
    return function ($59) {
        return $58(dragHandler($59));
    };
})();
var onDragLeave = (function () {
    var $60 = handler(Web_HTML_Event_DragEvent_EventTypes.dragleave);
    return function ($61) {
        return $60(dragHandler($61));
    };
})();
var onDragOver = (function () {
    var $62 = handler(Web_HTML_Event_DragEvent_EventTypes.dragover);
    return function ($63) {
        return $62(dragHandler($63));
    };
})();
var onDragStart = (function () {
    var $64 = handler(Web_HTML_Event_DragEvent_EventTypes.dragstart);
    return function ($65) {
        return $64(dragHandler($65));
    };
})();
var onDrop = (function () {
    var $66 = handler(Web_HTML_Event_DragEvent_EventTypes.drop);
    return function ($67) {
        return $66(dragHandler($67));
    };
})();
var clipboardHandler = Unsafe_Coerce.unsafeCoerce;
var onCopy = (function () {
    var $68 = handler(Web_Clipboard_ClipboardEvent_EventTypes.copy);
    return function ($69) {
        return $68(clipboardHandler($69));
    };
})();
var onCut = (function () {
    var $70 = handler(Web_Clipboard_ClipboardEvent_EventTypes.cut);
    return function ($71) {
        return $70(clipboardHandler($71));
    };
})();
var onPaste = (function () {
    var $72 = handler(Web_Clipboard_ClipboardEvent_EventTypes.paste);
    return function ($73) {
        return $72(clipboardHandler($73));
    };
})();
var addForeignPropHandler = function (key) {
    return function (prop) {
        return function (reader) {
            return function (f) {
                var go = function (a) {
                    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                };
                return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                    return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                }));
            };
        };
    };
};
var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean);
var onSelectedIndexChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("selectedIndex")(Foreign.readInt);
var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
module.exports = {
    handler: handler,
    onAbort: onAbort,
    onError: onError,
    onLoad: onLoad,
    onScroll: onScroll,
    onChange: onChange,
    onFileUpload: onFileUpload,
    onInput: onInput,
    onInvalid: onInvalid,
    onReset: onReset,
    onSelect: onSelect,
    onSubmit: onSubmit,
    onTransitionEnd: onTransitionEnd,
    onCopy: onCopy,
    onPaste: onPaste,
    onCut: onCut,
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseMove: onMouseMove,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    onMouseUp: onMouseUp,
    onWheel: onWheel,
    onKeyDown: onKeyDown,
    onKeyUp: onKeyUp,
    onBlur: onBlur,
    onFocus: onFocus,
    onFocusIn: onFocusIn,
    onFocusOut: onFocusOut,
    onDrag: onDrag,
    onDragEnd: onDragEnd,
    onDragExit: onDragExit,
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDragOver: onDragOver,
    onDragStart: onDragStart,
    onDrop: onDrop,
    onTouchCancel: onTouchCancel,
    onTouchEnd: onTouchEnd,
    onTouchEnter: onTouchEnter,
    onTouchLeave: onTouchLeave,
    onTouchMove: onTouchMove,
    onTouchStart: onTouchStart,
    onResize: onResize,
    onValueChange: onValueChange,
    onValueInput: onValueInput,
    onSelectedIndexChange: onSelectedIndexChange,
    onChecked: onChecked
};
