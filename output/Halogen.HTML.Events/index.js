// Generated by purs version 0.12.5
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Index = require("../Foreign.Index/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query = require("../Halogen.Query/index.js");
var Halogen_Query_InputF = require("../Halogen.Query.InputF/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Web_Clipboard_ClipboardEvent_EventTypes = require("../Web.Clipboard.ClipboardEvent.EventTypes/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_HTML_Event_DragEvent_EventTypes = require("../Web.HTML.Event.DragEvent.EventTypes/index.js");
var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");
var Web_UIEvent_FocusEvent_EventTypes = require("../Web.UIEvent.FocusEvent.EventTypes/index.js");
var Web_UIEvent_KeyboardEvent_EventTypes = require("../Web.UIEvent.KeyboardEvent.EventTypes/index.js");
var Web_UIEvent_MouseEvent_EventTypes = require("../Web.UIEvent.MouseEvent.EventTypes/index.js");
var Web_UIEvent_WheelEvent_EventTypes = require("../Web.UIEvent.WheelEvent.EventTypes/index.js");
var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;
var input_ = function (f) {
    return function (v) {
        return Data_Maybe.Just.create(Halogen_Query.action(f));
    };
};
var input = function (f) {
    return function (x) {
        return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
    };
};
var handler = function (et) {
    return function ($1) {
        return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
    };
};
var onAbort = handler("abort");
var onChange = handler(Web_HTML_Event_EventTypes.change);
var onClick = function ($2) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.click)(mouseHandler($2));
};
var onDoubleClick = function ($3) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.dblclick)(mouseHandler($3));
};
var onError = handler(Web_HTML_Event_EventTypes.error);
var onInput = handler(Web_HTML_Event_EventTypes.input);
var onInvalid = handler(Web_HTML_Event_EventTypes.invalid);
var onKeyDown = function ($4) {
    return handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown)(keyHandler($4));
};
var onKeyUp = function ($5) {
    return handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup)(keyHandler($5));
};
var onLoad = handler(Web_HTML_Event_EventTypes.load);
var onMouseDown = function ($6) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mousedown)(mouseHandler($6));
};
var onMouseEnter = function ($7) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter)(mouseHandler($7));
};
var onMouseLeave = function ($8) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave)(mouseHandler($8));
};
var onMouseMove = function ($9) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mousemove)(mouseHandler($9));
};
var onMouseOut = function ($10) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseout)(mouseHandler($10));
};
var onMouseOver = function ($11) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseover)(mouseHandler($11));
};
var onMouseUp = function ($12) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.mouseup)(mouseHandler($12));
};
var onReset = handler("reset");
var onResize = handler("resize");
var onScroll = handler("scroll");
var onSelect = handler(Web_HTML_Event_EventTypes.select);
var onSubmit = handler("submit");
var onTouchCancel = function ($13) {
    return handler("touchcancel")(touchHandler($13));
};
var onTouchEnd = function ($14) {
    return handler("touchend")(touchHandler($14));
};
var onTouchEnter = function ($15) {
    return handler("touchenter")(touchHandler($15));
};
var onTouchLeave = function ($16) {
    return handler("touchleave")(touchHandler($16));
};
var onTouchMove = function ($17) {
    return handler("touchmove")(touchHandler($17));
};
var onTouchStart = function ($18) {
    return handler("touchstart")(touchHandler($18));
};
var onTransitionEnd = handler("transitionend");
var onWheel = function ($19) {
    return handler(Web_UIEvent_WheelEvent_EventTypes.wheel)(wheelHandler($19));
};
var focusHandler = Unsafe_Coerce.unsafeCoerce;
var onBlur = function ($20) {
    return handler(Web_HTML_Event_EventTypes.blur)(focusHandler($20));
};
var onFocus = function ($21) {
    return handler(Web_UIEvent_FocusEvent_EventTypes.focus)(focusHandler($21));
};
var onFocusIn = function ($22) {
    return handler(Web_UIEvent_FocusEvent_EventTypes.focusin)(focusHandler($22));
};
var onFocusOut = function ($23) {
    return handler(Web_UIEvent_FocusEvent_EventTypes.focusout)(focusHandler($23));
};
var dragHandler = Unsafe_Coerce.unsafeCoerce;
var onDrag = function ($24) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.drag)(dragHandler($24));
};
var onDragEnd = function ($25) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragend)(dragHandler($25));
};
var onDragEnter = function ($26) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragenter)(dragHandler($26));
};
var onDragExit = function ($27) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragexit)(dragHandler($27));
};
var onDragLeave = function ($28) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragleave)(dragHandler($28));
};
var onDragOver = function ($29) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragover)(dragHandler($29));
};
var onDragStart = function ($30) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.dragstart)(dragHandler($30));
};
var onDrop = function ($31) {
    return handler(Web_HTML_Event_DragEvent_EventTypes.drop)(dragHandler($31));
};
var clipboardHandler = Unsafe_Coerce.unsafeCoerce;
var onCopy = function ($32) {
    return handler(Web_Clipboard_ClipboardEvent_EventTypes.copy)(clipboardHandler($32));
};
var onCut = function ($33) {
    return handler(Web_Clipboard_ClipboardEvent_EventTypes.cut)(clipboardHandler($33));
};
var onPaste = function ($34) {
    return handler(Web_Clipboard_ClipboardEvent_EventTypes.paste)(clipboardHandler($34));
};
var addForeignPropHandler = function (key) {
    return function (prop) {
        return function (reader) {
            return function (f) {
                var go = function (a) {
                    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                };
                return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                    return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                }));
            };
        };
    };
};
var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean);
var onSelectedIndexChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("selectedIndex")(Foreign.readInt);
var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
module.exports = {
    input: input,
    input_: input_,
    handler: handler,
    onAbort: onAbort,
    onError: onError,
    onLoad: onLoad,
    onScroll: onScroll,
    onChange: onChange,
    onInput: onInput,
    onInvalid: onInvalid,
    onReset: onReset,
    onSelect: onSelect,
    onSubmit: onSubmit,
    onTransitionEnd: onTransitionEnd,
    onCopy: onCopy,
    onPaste: onPaste,
    onCut: onCut,
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseMove: onMouseMove,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    onMouseUp: onMouseUp,
    onWheel: onWheel,
    onKeyDown: onKeyDown,
    onKeyUp: onKeyUp,
    onBlur: onBlur,
    onFocus: onFocus,
    onFocusIn: onFocusIn,
    onFocusOut: onFocusOut,
    onDrag: onDrag,
    onDragEnd: onDragEnd,
    onDragExit: onDragExit,
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDragOver: onDragOver,
    onDragStart: onDragStart,
    onDrop: onDrop,
    onTouchCancel: onTouchCancel,
    onTouchEnd: onTouchEnd,
    onTouchEnter: onTouchEnter,
    onTouchLeave: onTouchLeave,
    onTouchMove: onTouchMove,
    onTouchStart: onTouchStart,
    onResize: onResize,
    onValueChange: onValueChange,
    onValueInput: onValueInput,
    onSelectedIndexChange: onSelectedIndexChange,
    onChecked: onChecked
};
